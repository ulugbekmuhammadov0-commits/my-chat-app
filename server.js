const express = require('express');
const http = require('http');
const socketio = require('socket.io');
const mongoose = require('mongoose');

// =========================================================
// –ò–ó–ú–ï–ù–ï–ù–ò–ï –î–õ–Ø –•–û–°–¢–ò–ù–ì–ê: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
// –°–¢–†–û–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ë–£–î–ï–¢ –£–°–¢–ê–ù–û–í–õ–ï–ù–ê –ù–ê –°–ï–†–í–ï–†–ï (–Ω–∞–ø—Ä–∏–º–µ—Ä, Render)
const DB_URI = process.env.MONGO_URI; 
// =========================================================

// --- 1. –ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ---
// –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è MONGO_URI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
if (DB_URI) {
    mongoose.connect(DB_URI)
      .then(() => console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ!'))
      .catch(err => console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:', err));
} else {
    console.error('–û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è MONGO_URI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ë–î –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞.');
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã —Å–æ–æ–±—â–µ–Ω–∏—è
const MessageSchema = new mongoose.Schema({
  username: String,
  text: String,
  timestamp: { type: Date, default: Date.now }
});
const Message = mongoose.model('Message', MessageSchema); 

// --- 2. –ù–ê–°–¢–†–û–ô–ö–ê –°–ï–†–í–ï–†–ê ---
const app = express();
const server = http.createServer(app);
const io = socketio(server); 

// –ò–ó–ú–ï–ù–ï–ù–ò–ï –î–õ–Ø –•–û–°–¢–ò–ù–ì–ê: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–π —Ö–æ—Å—Ç–∏–Ω–≥–æ–º, –∏–ª–∏ 3000 –ª–æ–∫–∞–ª—å–Ω–æ
const PORT = process.env.PORT || 3000; 

// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ HTML —Ñ–∞–π–ª–∞
app.get('/', (req, res) => {
  res.sendFile(__dirname + '/index.html');
});

// --- 3. –õ–û–ì–ò–ö–ê –ß–ê–¢–ê (WebSocket) ---
io.on('connection', async (socket) => {
  let currentUsername = '–ê–Ω–æ–Ω–∏–º'; 
  console.log('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è');

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞)
  if (DB_URI) {
      try {
        const messages = await Message.find().sort({ timestamp: 1 }).limit(50);
        socket.emit('history', messages); 
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
      }
  }

  // –ü—Ä–∏–µ–º –∏–º–µ–Ω–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
  socket.on('new user', (name) => {
      currentUsername = name;
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º (–≤–∫–ª—é—á–∞—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      io.emit('chat message', { 
        username: '–°–∏—Å—Ç–µ–º–∞', 
        text: `**${currentUsername}** –≤–æ—à–µ–ª –≤ —á–∞—Ç.`, 
        timestamp: new Date()
      });
  });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
  socket.on('chat message', async (msgText) => {
    const newMessage = { 
      username: currentUsername, 
      text: msgText, 
      timestamp: new Date()
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ë–î (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞)
    if (DB_URI) {
        try {
            const messageDoc = new Message(newMessage);
            await messageDoc.save();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        }
    }
    
    // üöÄ –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –í–°–ï–ú –ö–†–û–ú–ï –û–¢–ü–†–ê–í–ò–¢–ï–õ–Ø
    // –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å —É–∂–µ –¥–æ–±–∞–≤–∏–ª –µ–≥–æ —Å–µ–±–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    socket.broadcast.emit('chat message', newMessage); 
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
  socket.on('disconnect', () => {
    io.emit('chat message', { 
        username: '–°–∏—Å—Ç–µ–º–∞', 
        text: `**${currentUsername}** –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç.`, 
        timestamp: new Date()
    });
  });
});

// --- 4. –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ---
server.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});